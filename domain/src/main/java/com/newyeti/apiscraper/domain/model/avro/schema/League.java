/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.newyeti.apiscraper.domain.model.avro.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class League extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8778014279241226329L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"League\",\"namespace\":\"com.newyeti.apiscraper.domain.model.avro.schema\",\"fields\":[{\"name\":\"country\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"flag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"logo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"season\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"standings\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",{\"type\":\"record\",\"name\":\"Standings\",\"fields\":[{\"name\":\"all\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"All\",\"fields\":[{\"name\":\"draw\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"goals\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Goals\",\"fields\":[{\"name\":\"against\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"for\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"lose\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"played\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"win\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"away\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Away\",\"fields\":[{\"name\":\"draw\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"goals\",\"type\":[\"null\",\"Goals\"],\"default\":null},{\"name\":\"lose\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"played\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"win\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"form\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"goalsDiff\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"group\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"home\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Home\",\"fields\":[{\"name\":\"draw\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"goals\",\"type\":[\"null\",\"Goals\"],\"default\":null},{\"name\":\"lose\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"played\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"win\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null},{\"name\":\"points\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"team\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Team\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"logo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"update\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}]}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<League> ENCODER =
      new BinaryMessageEncoder<League>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<League> DECODER =
      new BinaryMessageDecoder<League>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<League> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<League> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<League>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this League to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a League from a ByteBuffer. */
  public static League fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String country;
  @Deprecated public java.lang.String flag;
  @Deprecated public java.lang.Integer id;
  @Deprecated public java.lang.String logo;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.Integer season;
  @Deprecated public java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> standings;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public League() {}

  /**
   * All-args constructor.
   * @param country The new value for country
   * @param flag The new value for flag
   * @param id The new value for id
   * @param logo The new value for logo
   * @param name The new value for name
   * @param season The new value for season
   * @param standings The new value for standings
   */
  public League(java.lang.String country, java.lang.String flag, java.lang.Integer id, java.lang.String logo, java.lang.String name, java.lang.Integer season, java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> standings) {
    this.country = country;
    this.flag = flag;
    this.id = id;
    this.logo = logo;
    this.name = name;
    this.season = season;
    this.standings = standings;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return country;
    case 1: return flag;
    case 2: return id;
    case 3: return logo;
    case 4: return name;
    case 5: return season;
    case 6: return standings;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: country = (java.lang.String)value$; break;
    case 1: flag = (java.lang.String)value$; break;
    case 2: id = (java.lang.Integer)value$; break;
    case 3: logo = (java.lang.String)value$; break;
    case 4: name = (java.lang.String)value$; break;
    case 5: season = (java.lang.Integer)value$; break;
    case 6: standings = (java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.String value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'flag' field.
   * @return The value of the 'flag' field.
   */
  public java.lang.String getFlag() {
    return flag;
  }

  /**
   * Sets the value of the 'flag' field.
   * @param value the value to set.
   */
  public void setFlag(java.lang.String value) {
    this.flag = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'logo' field.
   * @return The value of the 'logo' field.
   */
  public java.lang.String getLogo() {
    return logo;
  }

  /**
   * Sets the value of the 'logo' field.
   * @param value the value to set.
   */
  public void setLogo(java.lang.String value) {
    this.logo = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'season' field.
   * @return The value of the 'season' field.
   */
  public java.lang.Integer getSeason() {
    return season;
  }

  /**
   * Sets the value of the 'season' field.
   * @param value the value to set.
   */
  public void setSeason(java.lang.Integer value) {
    this.season = value;
  }

  /**
   * Gets the value of the 'standings' field.
   * @return The value of the 'standings' field.
   */
  public java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> getStandings() {
    return standings;
  }

  /**
   * Sets the value of the 'standings' field.
   * @param value the value to set.
   */
  public void setStandings(java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> value) {
    this.standings = value;
  }

  /**
   * Creates a new League RecordBuilder.
   * @return A new League RecordBuilder
   */
  public static com.newyeti.apiscraper.domain.model.avro.schema.League.Builder newBuilder() {
    return new com.newyeti.apiscraper.domain.model.avro.schema.League.Builder();
  }

  /**
   * Creates a new League RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new League RecordBuilder
   */
  public static com.newyeti.apiscraper.domain.model.avro.schema.League.Builder newBuilder(com.newyeti.apiscraper.domain.model.avro.schema.League.Builder other) {
    return new com.newyeti.apiscraper.domain.model.avro.schema.League.Builder(other);
  }

  /**
   * Creates a new League RecordBuilder by copying an existing League instance.
   * @param other The existing instance to copy.
   * @return A new League RecordBuilder
   */
  public static com.newyeti.apiscraper.domain.model.avro.schema.League.Builder newBuilder(com.newyeti.apiscraper.domain.model.avro.schema.League other) {
    return new com.newyeti.apiscraper.domain.model.avro.schema.League.Builder(other);
  }

  /**
   * RecordBuilder for League instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<League>
    implements org.apache.avro.data.RecordBuilder<League> {

    private java.lang.String country;
    private java.lang.String flag;
    private java.lang.Integer id;
    private java.lang.String logo;
    private java.lang.String name;
    private java.lang.Integer season;
    private java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> standings;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.newyeti.apiscraper.domain.model.avro.schema.League.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.country)) {
        this.country = data().deepCopy(fields()[0].schema(), other.country);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.flag)) {
        this.flag = data().deepCopy(fields()[1].schema(), other.flag);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.logo)) {
        this.logo = data().deepCopy(fields()[3].schema(), other.logo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.season)) {
        this.season = data().deepCopy(fields()[5].schema(), other.season);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.standings)) {
        this.standings = data().deepCopy(fields()[6].schema(), other.standings);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing League instance
     * @param other The existing instance to copy.
     */
    private Builder(com.newyeti.apiscraper.domain.model.avro.schema.League other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.country)) {
        this.country = data().deepCopy(fields()[0].schema(), other.country);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.flag)) {
        this.flag = data().deepCopy(fields()[1].schema(), other.flag);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.id)) {
        this.id = data().deepCopy(fields()[2].schema(), other.id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.logo)) {
        this.logo = data().deepCopy(fields()[3].schema(), other.logo);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.season)) {
        this.season = data().deepCopy(fields()[5].schema(), other.season);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.standings)) {
        this.standings = data().deepCopy(fields()[6].schema(), other.standings);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.String getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setCountry(java.lang.String value) {
      validate(fields()[0], value);
      this.country = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearCountry() {
      country = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'flag' field.
      * @return The value.
      */
    public java.lang.String getFlag() {
      return flag;
    }

    /**
      * Sets the value of the 'flag' field.
      * @param value The value of 'flag'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setFlag(java.lang.String value) {
      validate(fields()[1], value);
      this.flag = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'flag' field has been set.
      * @return True if the 'flag' field has been set, false otherwise.
      */
    public boolean hasFlag() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'flag' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearFlag() {
      flag = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setId(java.lang.Integer value) {
      validate(fields()[2], value);
      this.id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearId() {
      id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'logo' field.
      * @return The value.
      */
    public java.lang.String getLogo() {
      return logo;
    }

    /**
      * Sets the value of the 'logo' field.
      * @param value The value of 'logo'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setLogo(java.lang.String value) {
      validate(fields()[3], value);
      this.logo = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'logo' field has been set.
      * @return True if the 'logo' field has been set, false otherwise.
      */
    public boolean hasLogo() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'logo' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearLogo() {
      logo = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'season' field.
      * @return The value.
      */
    public java.lang.Integer getSeason() {
      return season;
    }

    /**
      * Sets the value of the 'season' field.
      * @param value The value of 'season'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setSeason(java.lang.Integer value) {
      validate(fields()[5], value);
      this.season = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'season' field has been set.
      * @return True if the 'season' field has been set, false otherwise.
      */
    public boolean hasSeason() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'season' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearSeason() {
      season = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'standings' field.
      * @return The value.
      */
    public java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> getStandings() {
      return standings;
    }

    /**
      * Sets the value of the 'standings' field.
      * @param value The value of 'standings'.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder setStandings(java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>> value) {
      validate(fields()[6], value);
      this.standings = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'standings' field has been set.
      * @return True if the 'standings' field has been set, false otherwise.
      */
    public boolean hasStandings() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'standings' field.
      * @return This builder.
      */
    public com.newyeti.apiscraper.domain.model.avro.schema.League.Builder clearStandings() {
      standings = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public League build() {
      try {
        League record = new League();
        record.country = fieldSetFlags()[0] ? this.country : (java.lang.String) defaultValue(fields()[0]);
        record.flag = fieldSetFlags()[1] ? this.flag : (java.lang.String) defaultValue(fields()[1]);
        record.id = fieldSetFlags()[2] ? this.id : (java.lang.Integer) defaultValue(fields()[2]);
        record.logo = fieldSetFlags()[3] ? this.logo : (java.lang.String) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.season = fieldSetFlags()[5] ? this.season : (java.lang.Integer) defaultValue(fields()[5]);
        record.standings = fieldSetFlags()[6] ? this.standings : (java.util.List<java.util.List<com.newyeti.apiscraper.domain.model.avro.schema.Standings>>) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<League>
    WRITER$ = (org.apache.avro.io.DatumWriter<League>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<League>
    READER$ = (org.apache.avro.io.DatumReader<League>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
