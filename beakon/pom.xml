<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.newyeti.apiscraper</groupId>
		<artifactId>main</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<groupId>com.newyeti.apiscraper.adapter</groupId>
	<artifactId>beakon</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>beakon</name>
	<description>Pull data from api and push to Kakfa topic</description>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>com.newyeti.apiscraper</groupId>
			<artifactId>domain</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
		</dependency>

		<!-- <dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-otel</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency> -->

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<from>
						<image>sachindramaharjan/jre-alpine-curl:19.0.2_7-jre-alpine</image>
					</from>
					<to>
						<image>registry.hub.docker.com/sachindramaharjan/newyeti-apiscraper-${project.artifactId}</image>
					</to>
					<container>
						<environment>
							<JAVA_OPTS>-Xms512m -Xmx1024m</JAVA_OPTS>
							<ENTRYPOINT>com.newyeti.apiscraper.adapter.beakon.BeakonApplication</ENTRYPOINT>
						</environment>
						<entrypoint>
							<shell>/bin/sh</shell>
							<option>-c</option>
							<arg>/app/start.sh</arg>
						</entrypoint>
					</container>
					<extraDirectories>
						<paths>
							<path>
								<from>../scripts/jib</from>
								<into>/app</into>
							</path>
						</paths>
						<permissions>
							<permission>
								<file>/app/wait-for-it.sh</file>
								<mode>755</mode>
							</permission>
							<permission>
								<file>/app/start.sh</file>
								<mode>755</mode>
							</permission>
						</permissions>
					</extraDirectories>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>